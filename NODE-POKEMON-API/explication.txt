Concernant notre petit projet aec node : 

Etape 1 : installation de node.js et l'editeur 

Etape 2 : affichage de "Hello World " avec node , 

Etape 3 : creation du fichier package.json avvec la commande 'npm init',

Etape 4 : Installation de Epress en tant que dependance aecla commande 'npm install express --save',

    => app.get('/', (req, res) => res.send('Hello, Express ! üëç'))
    *Explication du code : le get() prends en compte deux paramettres , le ~ '/' ~ et le ~ (req, res) => res.send('Hello, Express ! üëç') ~
    le '/' : correspond au chemin de terminaison de notre API ;
    le (req, res) => res.send('Hello, Express ! üëç') : 
        * req : correspond a un objet request 
        * res : response ou reponse de la requete c-a-d l'objet qu'on doit enoyer a notre client depuis express ;

Etape 5 : installation de nodemon avec la commande 'npm install nodemon --save-dev' pour evviter de recharger soit meme le serveur a chaque modification ,

C'EST QUOI LE ROLE D'UN API Rest ???????
--> Intercepter une requette Http, puis returner une reponse Http contenant les informations demand√©s par le client au format JSON ;

Reponse HTTP :
    --> Les Donn√©es ;
    --> Le format JSON ;
    --> Le type MIME ; (ajouter sous forme d'une entete)
    --> Le code de status (ex : 200 ,  404 not found)

extension chrome : JSON Viewer , pour ameliorer l'afichage en format json dans le naigateur;

---------------- Initiation au Middleware ----------------

les Middleware A : qu'est ce que c'est ????
-->  ce sont simplement des fonctions javascript capable d'iteragir avec les requettes entrante et sortante de notre APIRest ,
--> Les Middleware permet d'appliquer un traitement au requette HTTP entrante et sortante, fonctionne par dessus notre point de terminaison existant 

qu'est ce qui les rends un peu speciaux ????
--> ils peuvent acceder aux objet "req" et "res" d'Express qui ouvre la possiblite a toute un cas d'utilisation possible ;

En resume, ce sont comme des fonctions javascript qui ont acc√®s a certains donn√©es d'Express

---------------- Il existe 05 types de Middleware ----------------
--> 01: Le Middleware d'application,
--> 02: Le Middleware du routeur,
--> 03: Le Middleware de traitement d'erreurs , 
--> 04: Le Middleware integr√© ,
--> 05: Le Middleware tiers

---------------- On a creer notre propre Middleware ----------------
--> Charger d' afficher l'URL des requettes entrantes vers botre APIRest , pratique pour debugger a la main 

---------------- Installation d'une Middleware deja existant ! ----------------
{ morgan } avec la comande : npm install morgan --save-dev 

* Note sur les Middleware: tous les Middleware sont reli√©s et connect√©s entre eux

installation d'une Middleware pour ajouter une favIcon : npm install serve-favicon --save

installation d'une Middleware pour la transformation d'une chaine de caractere en JSON : npm install body-parser --save